write a gui tool that creates levels

exports as lua compatible files
automagically requires the used entities
automagically detects which entities are available(by looking into the entities folder and listing which .lua files are in there)
creates a list of entities along with their coords
for floor and wall tiles also exports a tilemap
exports a background maybe

the file should look something like this:

require(...) -- requires all the entities that are used

local LevelWhatever = {} -- the name of this table is also the filename

LevelWhatever.entities = {
	Player.new(x, y),
	OtherEntities.new(x, y), -- adds in the player and all other entities
	...
}

LevelWhatever.tilemapwidth = width
LevelWhatever.tilemapheight = height
LevelWhatever.tilemap = {1,1,1,1,1,1,2,1,1,3,1,1,1,1,1,...} -- returns a tilemap that will be handled elsewhere

--defines the images to be used

LevelWhatever.background = love.graphics.newImage(...)

LevelWhatever.tiles = {} -- defines the images to be used by each tile index, should be at least as big as the highest index
LevelWhatever.tiles[1] = love.graphics.newImage(...)
LevelWhatever.tiles[2] = love.graphics.newImage(...)
LevelWhatever.tiles[3] = love.graphics.newImage(...)

--create a spritebatch or something to draw the foreground all at once

--from here the tilemap can be drawn quite easily

function LevelWhatever.draw()
	

	for i, v in ipairs(LevelWhatever.entities), 1 do
		v:draw()
	end
end

function LevelWhatever.update(dt)
	for i, v in ipairs(LevelWhatever.entities), 1 do
		v:update(dt)
	end
end

return LevelWhatever